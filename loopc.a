#/*# Start of file loopc.a */
#
#/*# MIPSMARK 1.0 1/5/98 Copyright 1998 J. Waldron. */
#
## Question:
## "nums" is an array of "count" words.
## Count the number of elements in "nums"
## whose value is greater than 50 and less than 100,
## and print out the count
##
#/*# Output format must be:		*/
#/*# "count = 4"		*/
#include <stdio.h>       /* for printf in C programs */

#/*##############################################
#					 	#
#		text segment			#
#						#
#################################################

	.text		
       	.globl __start 
__start:		# execution starts here  */


#/* Any changes above this line will be discarded by
# mipsmark. Put your answer between dashed lines. */
#/*-------------- start cut ----------------------- */

#/*  Student's Name: Yong Youn Kwon	Account: ykwon		*/
	la $t2, nums			# load nums to t2
	li $t0, 0			# set count=0 in t0
	lw $t4, count			# set step=8 in t4
loop:	
	lb $t1, ($t2)			# load num from t2 to t1
	addi $t2, 4			# point to next num
	beqz $t4, endloop		# check if end
		sub $t4, 1		# substract step by 1
		ble $t1, 50, loop	# check if num <= 50
		bge $t1, 100, loop	# check if num >= 100
		addi $t0, 1		# increment count
		j loop			# continue loop
endloop:
	la $a0, ans		# load ans
	jal print_str		# print ans
	
	move $a0, $t0		# move count to a0
	jal print_int		# print count
	
	la $a0, endl		# load endl
	jal print_str		# print endl
	
	li $v0, 10		# exit
	syscall

print_str:
	li $v0, 4
	syscall
	jr $ra

print_int:
	li $v0, 1
	syscall
	jr $ra
#/*--------------  end cut  -----------------------
# Any changes below this line will be discarded by
# mipsmark. Put your answer between dashed lines.

#################################################
#                                               #
#               data segment                    #
#                                               #
#################################################

        .data			#*/
nums:	.word 3,68,2,60,2000,51,99,102
count:	.word 8
ans:	.asciiz "count = "
endl:	.asciiz "\n"
#
#/*# End of file loopc.a		*/
